name: Release with Code Signing

on:
  push:
    tags: [ 'v*' ]

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: mac
            
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    # Windows Code Signing (optional - requires certificate)
    - name: Import Windows certificate
      if: matrix.platform == 'win' && env.WINDOWS_CERTIFICATE != ''
      run: |
        echo "${{ secrets.WINDOWS_CERTIFICATE }}" | base64 --decode > certificate.p12
        echo "CSC_LINK=certificate.p12" >> $GITHUB_ENV
        echo "CSC_KEY_PASSWORD=${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}" >> $GITHUB_ENV
      env:
        WINDOWS_CERTIFICATE: ${{ secrets.WINDOWS_CERTIFICATE }}

    # macOS Code Signing (optional - requires Apple Developer account)
    - name: Import macOS certificate
      if: matrix.platform == 'mac' && env.MACOS_CERTIFICATE != ''
      run: |
        echo "${{ secrets.MACOS_CERTIFICATE }}" | base64 --decode > certificate.p12
        security create-keychain -p "${{ secrets.MACOS_CERTIFICATE_PASSWORD }}" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "${{ secrets.MACOS_CERTIFICATE_PASSWORD }}" build.keychain
        security import certificate.p12 -k build.keychain -P "${{ secrets.MACOS_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "${{ secrets.MACOS_CERTIFICATE_PASSWORD }}" build.keychain
        echo "CSC_LINK=certificate.p12" >> $GITHUB_ENV
        echo "CSC_KEY_PASSWORD=${{ secrets.MACOS_CERTIFICATE_PASSWORD }}" >> $GITHUB_ENV
        echo "APPLE_ID=${{ secrets.APPLE_ID }}" >> $GITHUB_ENV
        echo "APPLE_ID_PASSWORD=${{ secrets.APPLE_ID_PASSWORD }}" >> $GITHUB_ENV
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}

    - name: Build and release
      run: npm run build:${{ matrix.platform }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Uncomment if using auto-updater
        # PUBLISH: always

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-release
        path: |
          dist/*.exe
          dist/*.dmg
          dist/*.deb
          dist/*.tar.gz
        retention-days: 7
